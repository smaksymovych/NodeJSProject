name: Build and Publish back-end

on:
  # run it on push to the default repository branch
  push:
    branches: [ops/add-docker]
  # run it during pull request
  # pull_request:
  #  branches: [add-docker]

env:
  DEPLOYMENT_NAME: gke-kaktus-app-dep
  GKE_CLUSTER: my-bamboo-auto-cluster
  GKE_STAGE_PROJECT_ID: bamboo-sweep-368712
  GKE_ZONE: us-east1
  IMAGE-NAME: node-web-app
  REGION: us-central1
  REGISTRY: us-central1-docker.pkg.dev
  REPO-NAME: kaktus-repo
  REPO-FNAME: us-central1-docker.pkg.dev/kaktus-cicd/kaktus-repo
  PROJECT-ID: kaktus-cicd 
  PROVIDER-ID: projects/1044927291290/locations/global/workloadIdentityPools/kaktus-pool/providers/kaktus-provider 
  SERVICE-ACCOUNT: kaktus-service-account
  TAG: latest

jobs:
  # define job to build and publish docker image
  build-docker-image:
    name: Build image
    runs-on: ubuntu-latest
    
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
      - id: checkout
        name: Git clone repo
        uses: actions/checkout@v1

      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: ${{ env.PROVIDER-ID }}
          service_account: ${{ env.SERVICE-ACCOUNT }}@${{ env.PROJECT-ID }}.iam.gserviceaccount.com
          access_token_lifetime: 300s

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Create Tags
        run: |
          echo "MAIN-TAG=$( cat VERSION )-$( date +%Y%m%d_%H%M%Z )" >> $GITHUB_ENV

      - name: Tag Docker image and push to Google Artifact Registry
        id: docker-push-tagged
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
             ${{ env.REPO-FNAME }}/${{ env.IMAGE-NAME }}:${{ env.MAIN-TAG }}
             ${{ env.REPO-FNAME }}/${{ env.IMAGE-NAME }}:latest

      # Set up kustomize
      - name: List of images
        run: docker images

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          # replacing the image name in the k8s template
          ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE:TAG=${{ env.REPO-FNAME }}/${{ env.IMAGE-NAME }}:latest
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
